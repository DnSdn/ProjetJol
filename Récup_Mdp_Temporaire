# il faut se connecter à NOEE HOM5 avant de lancer le script et IE doit être la fenêtre juste sous celle de Sikuli
import os
# répertoire des fichiers
dir = "d:/" # the folder, where your ids.txt is
# fichier en sortie avec les numéros de compte et les mots de passe temporaire
outputFileName = os.path.join(dir, "mdp_temporaire.csv") 
outputFile = file(outputFileName, "w")
# fichier en entrée avec les numéros de compte
inputFileName = os.path.join(dir, "login_tcc.csv") 
inputFile = open(inputFileName)
tcc =""
# on parcourt les numéros de compte
for line in inputFile.readlines():
    print line.split(";")[0]
    
    num_compte = line.split(";")[0]
    type_tcc = line.split(";")[1]
    sg = "SG"
    bnp = "BNPP"
    federis = "FEDERIS"
    axa = "AXA"
    hsbc = "HSBC"
    ok =""
    
    wait(1)  
    if(tcc.strip() != type_tcc.strip()):
     click(Pattern("1359380149998.png").similar(0.83))
     ok = "ok"
    if(type_tcc.strip() == sg.strip() and tcc.strip() != type_tcc.strip()):
        click(Pattern("sg.png").similar(0.80))
        tcc = type_tcc.strip()
    if(type_tcc.strip() == bnp.strip() and tcc.strip() != type_tcc.strip()):
        click(Pattern("bnp.png").similar(0.78))    
        tcc = type_tcc.strip()               
    if(type_tcc.strip() == federis.strip() and tcc.strip() != type_tcc.strip()):
        click(Pattern("federis.png").similar(0.81))  
        tcc = type_tcc.strip()
    if(type_tcc.strip() == axa.strip() and tcc.strip() != type_tcc.strip()):
        click(Pattern("axa.png").similar(0.80))
        tcc = type_tcc.strip()

    if(type_tcc.strip() == hsbc.strip() and tcc.strip() != type_tcc.strip()):
        click(Pattern("hsbc.png").similar(0.82))
        tcc = type_tcc.strip()


    
    if(ok.strip() == "ok"): 
        click(Pattern("modifierPosition.png").similar(0.89))    
           
    click(Pattern("1358950474776.png").similar(0.96))
    wait(1)    
    # on recherche l'individu
    click(Pattern("individus.png").similar(0.88))
    click(Pattern("iculeIIident.png").similar(0.65).targetOffset(-18,-5))
    click("IcompteII.png")
    paste(num_compte)
    click(Pattern("AheindreAr.png").similar(0.96))
    wait(1)
    # on vérifie qu'il existe
    if not exists("SalariesSOCI.png") : print("individu " + num_compte + "inconnu.")
    if exists("salaries.png") :
        # on renseigne son email
        doubleClick(Pattern("Email.png").targetOffset(19,0))
        wait(1) 
        paste("s2e.recette@s2e-net.com")
        wait(1) 
        # on crée une demande de service
        click("1358952474669.png")
        wait(1) 
        click("1358952538457.png")
        wait(1)    
        click(Pattern("1359017766753.png").similar(0.89))
        type("Ren")
        wait(1)  
        click("Soussoustype-1.png")
        wait(1)  
        click("Envoiparemai.png")
        wait(1)
        click("Valider.png")
        wait("1358952871983.png",30)    
        click("1358952871983.png")
        wait(1)  
        # on va récupérer le mot de passe temporaire
        click("Iwlf.png")
        wait(1)  
        click("DetailIndivi.png")
        wait(1) 
        # on regarde s'il faut développer le détail
        if not exists(Pattern("MotdePease.png").targetOffset(37,0)): 
            if exists(Pattern("1358955571439.png").similar(0.90)): 
                click(Pattern("1358955571439.png").similar(0.90))       
                wait(1) 
        # on met le mot de passe dans le presse-papier
        doubleClick(Pattern("MotdePease.png").targetOffset(37,0))
        wait(1)
        type('c', KeyModifier.CTRL)
        mdp_temporaire = Env.getClipboard().strip()
        print(num_compte + ";" + mdp_temporaire + ";" + type_tcc)
        # on écrit le résultat dans le fichier de sortie
        outputFile.write(num_compte + ";" + mdp_temporaire + ";" + type_tcc + "\n");
    # end if exists
inputFile.close() # close file
outputFile.close() # close file
wait(3)
